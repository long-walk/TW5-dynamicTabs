author: Thomas
core-version: >=5.2.0
dependents: 
description: Dynamic Tabs Plugin for Tiddlywiki
list: Readme Usage Configuration
plugin-type: plugin
source: https://github.com/long-walk/TW5-dynamicTabs.git
title: $:/plugins/long-walk/TW5-dynamicTabs
type: application/json
version: 0.0.1

{"tiddlers":{"/home/thomas/temp/TW5/plugins/long-walk/dynamicTabs/README.md":{"title":"/home/thomas/temp/TW5/plugins/long-walk/dynamicTabs/README.md","text":"# TW5-dynamicTabs \n\n**NOTE:** This plugin is not actively maintained.\n\nThis plugin alows to create a tabs list from Tagged tiddler\nIt alows the direct edit and order the displayed tiddler\n\nTo install drag and drop this link to the \nhttps://github.com/long-walk/TW5-dynamicTabs/blob/master/target/TW5-dynamicTabs-0.0.1.tid\n\n## License\n\nThis project is [MIT licensed](https://github.com/tgrosinger/tw5-checklist/blob/master/tiddlers/license.tid).\n","type":"text/x-markdown"},"$:/plugins/long-walk/dynamicTabs/css/stylesheet":{"title":"$:/plugins/long-walk/dynamicTabs/css/stylesheet","tags":"$:/tags/Stylesheet","type":"text/css","text":"/* left tab menue Stylesheet*/\n.tc-vertical .tc-tab-buttons { width: 150px; }\n.tc-horizontal .tc-tab-buttons { width: 95%; }\ninput { width: auto !important; }\n"},"$:/plugins/long-walk/TW5-dynamicTabs/Configuration":{"title":"$:/plugins/long-walk/TW5-dynamicTabs/Configuration","alignment":"tc-vertical","arrows":"yes","fastarrows":"yes","fastLineSort":"3","text":"!!!Options for Dinamic Tabs\n\n<table>\n  <tr>\n    <th align=\"left\">Default Tabs Menu alignment:</th>\n    <td>\n        <$radio field=\"alignment\" value=\"tc-vertical\" default=\"tc-vertical\" tiddler=\"$:/plugins/long-walk/TW5-dynamicTabs/Configuration\"> Vertical</$radio><br/>\n        <$radio field=\"alignment\" value=\"tc-horizontal\" tiddler=\"$:/plugins/long-walk/TW5-dynamicTabs/Configuration\"> Horizontal</$radio>\n\t<br/>\n\t* The default can be overwritten with the macro request\n    </td>\n  </tr>\n  <tr>\n    <th align=\"left\">Sort optins:</th>\n    <td>\n\t<$checkbox field=\"arrows\" checked=\"yes\" unchecked=\"no\" tiddler=\"$:/plugins/long-walk/TW5-dynamicTabs/Configuration\"> Show sort arrows?</$checkbox><br/>\n\t<$checkbox field=\"fastarrows\" checked=\"yes\" unchecked=\"no\" tiddler=\"$:/plugins/long-walk/TW5-dynamicTabs/Configuration\"> Show fast sort arrows?</$checkbox><br/>\n\t<$edit-text field=\"fastLineSort\" size=1 default=3 tiddler=\"$:/plugins/long-walk/TW5-dynamicTabs/Configuration\"/> Fast sort how many lines\n    </td>\n  </tr>\n</table>\n\n"},"$:/plugins/long-walk/TW5-dynamicTabs/Readme":{"title":"$:/plugins/long-walk/TW5-dynamicTabs/Readme","text":"This Plugin create a Tabs menu for Taged tiddler.\n\n!! Features include:\n\n* Direct edit the selected tiddler\n* Allow to order the Tagged tiddler with up and down buttons and fast up and down\n\n!! know Bugs\n* To fast repeting klicks causes order problems\n\n\n!! Source\nhttps://github.com/long-walk/TW5-dynamicTabs.git\n"},"$:/plugins/long-walk/TW5-dynamicTabs/Usage":{"title":"$:/plugins/long-walk/TW5-dynamicTabs/Usage","text":"! Reload tiddlywiki\n* The plugin use javascrip so save and reload the tiddlywiki to activate the Plugin\n\n! Create a dynamic Tabs List\n\n1. create a new Tiddler\n\n2. add this macro to the text section\n\n```\n<$macrocall $name=\"dynamicTabs\" mainTabsTiddler=<<currentTiddler>> tName=\"TagName\"/>\n```\n\n3. replace ''~TagName'' with the tag you want to create a dynamic tab list \n\n! Menu\n* on the left side you get the tabs Menue to select the tiddler\n* on the right side you have three smaler icons to eddit the selected tiddler and some arrows to order the Tab List\n"},"$:/long-walk/TW5-dynamicTabs/orderTabs.js":{"title":"$:/long-walk/TW5-dynamicTabs/orderTabs.js","text":"/*\\\ntitle: $:/long-walk/TW5-dynamicTabs/orderTabs.js\ntype: application/javascript\nmodule-type: macro\n\n\\*/\n(function(){\n\n\"use strict\";\n\nexports.name = \"orderTabs\";\nexports.params = [\n\t{ name:\"mainTabsTiddler\" },   /* mainTabsTiddler Tiddler */ \n\t{ name:\"direction\" }  /* up = -1, down = 1 */\n];\nlet fromName = \"\";\n\n/*\\\n * Sort the tiddlilist\n *\n\\*/\nexports.run = function(mainTabsTiddler, direction) {\n    try {\n        var button = \"\";\n        var selected = \"\";\n        direction = Number(direction);\n        \n        var selector = \"[data-tiddler-title=\\\"\" + mainTabsTiddler + \"\\\"] .tc-tab-buttons button\";\n        var selectedSelector = \"[data-tiddler-title=\\\"\" + mainTabsTiddler + \"\\\"] .tc-tab-buttons .tc-tab-selected\";\n\n        if (document.querySelectorAll(selectedSelector)[0])\n            selected = document.querySelectorAll(selectedSelector)[0].innerHTML.trim();\n        \n        var buttonList = document.querySelectorAll(selector);\n        var buttonCount = buttonList.length;\n        var from = Number($tw.wiki.getTiddler(selected).fields.order);\n        var to = (from + direction);\n        if ( to < 0 )\n                to = 0;\n        if ( to > buttonCount-1 )\n                to = buttonCount-1;\n        \n        recursiveOrder(0, buttonList, from, to);\n        \n        return;\n    } catch (err) {\n        console.error(err.stack)\n        return \"(ERROR: \" + err.message + \") \";\n    }\n};\n    \nfunction recursiveOrder(index, buttonList, from, to){\n    // save the pre, current and previous tiddler Name\n    try {\n        var name = buttonList[index].innerHTML.trim();\n        var preName = \"\";\n        var postName = \"\";\n\n        if (index > 0)\n            preName = buttonList[index-1].innerHTML.trim();\n        if(index < buttonList.length-1)\n            postName = buttonList[index+1].innerHTML.trim();\n        if (index == to)\n            name = buttonList[from].innerHTML.trim();\n        if (index == from)\n            fromName = name; // Global variable\n\n        // recusion  \n        var status = 0;\n        if (index < buttonList.length-1){\n            status = recursiveOrder((index+1), buttonList, from, to);\n        }\n\n        // reorder tidlers\n        if (index == from && status == 0){\n            status--;\n            name = preName;\n        }else if (index == from){\n            status--;\n            name = postName;\n        }else if (index == to){\n            status++;\n            name = fromName;\n        }else if (status > 0){\n            name = postName;\n        }else if (status < 0){\n            name = preName;\n        }\n        $tw.wiki.setText(name, \"order\", 0, index, {suppressTimestamp: true});\n        return status;\n    } catch (err) {\n        console.error(err.stack)\n    }\n}\n})();\n\n","type":"application/javascript","module-type":"macro"},"$:/long-walk/TW5-dynamicTabs/selectedTab.js":{"title":"$:/long-walk/TW5-dynamicTabs/selectedTab.js","text":"/*\\\ntitle: $:/long-walk/TW5-dynamicTabs/selectedTab.js\ntype: application/javascript\nmodule-type: macro\n\n\\*/\n(function(){\n\n\"use strict\";\n\nexports.name = \"selectedTab\";\nexports.params = [{name:\"mainTabsTiddler\"}];\n\n/*\\\nReturn the Selected Tab \n\\*/\nexports.run = function(mainTabsTiddler) {\n\ttry {\n\t\tvar out = \"\";\n\t\tvar selector = \"[data-tiddler-title=\\\"\" + mainTabsTiddler + \"\\\"] .tc-tab-buttons .tc-tab-selected\";\n\n\t\tif (document.querySelectorAll(selector)[0])\n\t\t\tout = document.querySelectorAll(selector)[0].innerHTML.trim();\n\t\treturn out;\n\t} catch (err) {\n\t\tconsole.error(err.message + \": \" + err.stack)\n\t\treturn \"(ERROR: \" + err.message + \") \";\n\t}\n};\n})();\n","type":"application/javascript","module-type":"macro"},"$:/long-walk/TW5-dynamicTabs/macro":{"title":"$:/long-walk/TW5-dynamicTabs/macro","tags":"$:/tags/Macro","text":"\\define concate() $(v1)$$(v2)$\n\n\\define orderUpButton()\n<$macrocall $name=\"orderTabs\" mainTabsTiddler=\"\"\"$(mainTabsTiddler)$\"\"\" direction=-1/>\n\\end\n\n\\define orderDownButton()\n<$macrocall $name=\"orderTabs\" mainTabsTiddler=\"\"\"$(mainTabsTiddler)$\"\"\" direction=1/>\n\\end\n\n\\define fastUpButton()\n<$set name=v1 value=\"-\">\n<$set name=v2 value={{$:/plugins/long-walk/TW5-dynamicTabs/Configuration!!fastLineSort}}>\n<$macrocall $name=\"orderTabs\" mainTabsTiddler=\"\"\"$(mainTabsTiddler)$\"\"\" direction=<<concate>>/>\n</$set>\n</$set>\n\\end\n\n\\define fastDownButton()\n<$macrocall $name=\"orderTabs\" mainTabsTiddler=\"\"\"$(mainTabsTiddler)$\"\"\" direction={{$:/plugins/long-walk/TW5-dynamicTabs/Configuration!!fastLineSort}}/>\n\\end\n\n\\define dynamicTabs(mainTabsTiddler:\"\", tName:\"\")\n''\n@@float:right;\n\n<$button class=\"tc-btn-invisible\">\n{{$:/core/images/edit-button}}\n<$action-sendmessage $message=\"tm-edit-tiddler\" $param=<<selectedTab \"$mainTabsTiddler$\">>/>\n</$button>\n<br/>\n<$button class=\"tc-btn-invisible\">\n{{$:/core/images/new-button}}\n<$action-sendmessage $message=\"tm-new-tiddler\" tags=\"$tName$\" order=\".\"/>\n</$button>\n<br/>\n<$set name=\"mainTabsTiddler\" value=\"$mainTabsTiddler$\">\n<$reveal type=\"match\" state=\"$:/plugins/long-walk/TW5-dynamicTabs/Configuration!!fastarrows\" text=\"yes\">\n<$button class=\"tc-btn-invisible\" actions=\"<<fastUpButton>>\">\n{{$:/core/images/chevron-up}}\n</$button>\n<br/>\n</$reveal>\n<$reveal type=\"match\" state=\"$:/plugins/long-walk/TW5-dynamicTabs/Configuration!!arrows\" text=\"yes\">\n<$button class=\"tc-btn-invisible\" actions=\"<<orderUpButton>>\">\n{{$:/core/images/up-arrow}}\n</$button>\n<br/>\n</$reveal>\n<$reveal type=\"match\" state=\"$:/plugins/long-walk/TW5-dynamicTabs/Configuration!!arrows\" text=\"yes\">\n<$button class=\"tc-btn-invisible\" actions=\"<<orderDownButton>>\">\n{{$:/core/images/down-arrow}}\n</$button>\n<br/>\n</$reveal>\n<$reveal type=\"match\" state=\"$:/plugins/long-walk/TW5-dynamicTabs/Configuration!!fastarrows\" text=\"yes\">\n<$button class=\"tc-btn-invisible\" actions=\"<<fastDownButton>>\">\n{{$:/core/images/chevron-down}}\n</$button>\n</$reveal>\n</$set>\n@@\n''\n<<tag $tName$>>\n<$reveal type=\"match\" state=\"$:/plugins/long-walk/TW5-dynamicTabs/Configuration!!alignment\" text=\"tc-vertical\">\n<$macrocall $name=\"tabs\" tabsList=\"[tag[$tName$]nsort[order]]\" default=\"[tag[$tName$]nsort[order]first[]]\" class=\"tc-vertical\" />\n</$reveal>\n<$reveal type=\"nomatch\" state=\"$:/plugins/long-walk/TW5-dynamicTabs/Configuration!!alignment\" text=\"tc-vertical\">\n<$macrocall $name=\"tabs\" tabsList=\"[tag[$tName$]nsort[order]]\" default=\"[tag[$tName$]nsort[order]first[]]\" class=\"tc-horizontal\" />\n</$reveal>\n\\end\n\n"}}}